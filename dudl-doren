#! /usr/bin/perl -w

# $Id: dudl-doren,v 1.8 2007-01-12 09:14:43 bj Exp $

use strict;
use Getopt::Long;
use Dudl::Config;
use Dudl::Misc;

=pod

=head1 NAME

dudl-doren - move dirs from 2test to 3ren or possibly 4out

=head1 SYNOPSIS

dudl-doren [<opts>] <genre> <dir> ...

=head1 DESCRIPTION

TODO: man desc
move dirs from 2test 

=over 2

=item *

to 4ren using dudl-rename if "ren" file works flawlessly

=item *

to 3ren otherwise

=back

=head1 OPTIONS

=over 4

=item B<--delall>

Don't ask before deleting sucessfully processed directories.

=item B<--help>

display short usage info.

=cut

my $opt_delall;

my $wanthelp;
my $needhelp;

if( ! GetOptions(
	"delall!"	=> \$opt_delall,
	"help!"		=> \$wanthelp,
)){
	$needhelp++;
}

my $genre = &checkgenre( shift );
if( ! defined $genre ){
	print STDERR "invalid/missing genre\n";
	$needhelp++;
}

if( $#ARGV < 0 ){
	print STDERR "missing directory\n";
	$needhelp++;
}

if( $wanthelp ){
	print <<EOF;
usage: $0 <opts> <genre> <dir> ...
 move dirs from 2test to 3ren or possibly 4out
options:
 --delall                don't ask before deleting processed directories
 --help                  this short usage information.
EOF
	exit 0;
}

if( $needhelp ){
	print STDERR "use --help for usage info\n";
	exit 1;
}

my $dudl = new Dudl::Config;
my $rdir = $dudl->conf("workpath") . "/3ren";
my $odir = $dudl->conf("workpath") . "/4out";

my @jobnames = ("", qw( /ren /TRACKS.dudl_rename /TRACKS.dudl_archive));

for my $arg ( @ARGV ){
	foreach my $f ( @jobnames ){
		if( -f "$arg$f" ){
			$arg .= $f;
			last;
		}
	}
	if( ! -f $arg ){
		print STDERR "no such file: $arg\n";
		return;
	}

	if( $arg !~ /^(.+)\/([^\/]+)$/ ){
		print STDERR "unable to cope with unexpected job name: $arg\n";
		return;
	}

	my $dir = $1;
	my $ren = $arg;

	# TODO: escape arguments properly or pass array to system()
	if( 0 == system("dudl-rename --test '$ren' > /dev/null 2>&1" )){
		system("dudl-rename --outdir '$odir/$genre' '$ren'") == 0
			or die "rename failed: $!";
	
		if( ! $opt_delall ){
			print "hit ENTER to continue";
			$_ = <STDIN>;
			exit if /^q$/i;
		}

		system("rm", "-rf", $dir) == 0
			or die "rm failed: $!";
	
	} else {
		-d "$rdir/$genre" or mkdir "$rdir/$genre", 0777;
		if( &samedir( "$rdir/$genre", &parentdir($dir)) ){
			print STDERR "directory is alredy in 3ren: $dir\n";
			next;
		}

		system("mv", $dir, "$rdir/$genre") == 0
			or die "mv failed: $!";
	}
}

=pod

=head1 SEE ALSO

I<Dudl::Overview>

=head1 AUTHOR

Rainer Clasen

=cut

