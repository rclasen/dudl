#!/usr/bin/perl -w

# $Id: dudl-musdirs,v 1.3 2006-01-25 16:37:28 bj Exp $

use strict;
use Dudl::DB;
use Dudl::StorUnit;

=pod

=head1 NAME

dudl-musdirs - show directories of a unit

=head1 SYNOPSIS

dudl-musdirs <unit>

=head1 DESCRIPTION

shows all directories of a unit including the number of files in each
directory and how many of them are already part of the music DB.

=over 4

=item <unit>

The name of the unit - combined from "collection" and "colnum". For
example "ab2".

=back

=head1 EXAMPLES

dudl-musdirs sl1

=head1 SEE ALSO

I<Dudl::Overview>
I<dudl-musbatch>

=head1 AUTHOR

Rainer Clasen

=cut

my $dudl = new Dudl::DB;
my $db = $dudl->db;

my $unitname = shift || die "need a unit name";

my $unit = Dudl::StorUnit->load_path( dudl => $dudl, path => $unitname );
if( ! $unit ){
	print STDERR "no such unit found: $unitname\n";
	exit 1;
}
my $id = $unit->val("id");

# TODO: move database access to module
my $query = 
	"SELECT ".
		"dir, ".
		"COUNT(title) as titles, ".
		"COUNT(dir) as files ".
	"FROM stor_file ".
	"WHERE ".
		"unit_id = $id ".
		" AND NOT broken ".
	"GROUP BY ".
		"dir ".
	"ORDER BY ".
		"dir ";

my $sth = $db->prepare( $query );
if( ! $sth ){
	die $db->errstr ."\nquery: $query\n";
}

my $res = $sth->execute;
if( ! $res ){
	die $sth->errstr ."\nquery: $query\n";
}

my( $dir, $titles, $files );
$sth->bind_columns( \( $dir, $titles, $files ) );

printf "%4s %4s %7s %s\n", "tit", "fil", "unit", "dir";
while( defined $sth->fetch ){
	printf "%4s %4d %7d %s\n", $titles, $files, $id, $dir;
}	
$sth->finish;


# TODO: GetOptions + usage
