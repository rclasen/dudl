#! /usr/bin/perl -w

# $Id: dudl-storscan,v 1.3 2006-01-24 16:41:33 bj Exp $

use strict;
use File::Find;
use Getopt::Long;
use Dudl::DB;
use Dudl::Misc;
use Dudl::StorUnit;

=pod

=head1 NAME

dudl-storscan - scan files on units to add their info to the DB

=head1 SYNOPSIS

dudl-storscan [<opts>] <topdir> [<unit> ...]

=head1 DESCRIPTION

scans files on storage units and adds this info the DB.

If I<topdir> is found in /etc/fstab, you can scan multiple CD/DVD/whatever
units. Otherwise a a single directory is scanned.

=over 4

=item scanning CDs:

you have to specify the names of the units you're going to scan. It's
attempted to mount/unmount the CD before/after the scan and retrieve unit
information (unit size, unit name, ...).

=item scanning a directory:

you may specify a single unit name. If you don't, it's taken from the last
directorie's name.

=back 

=head1 OPTIONS

=over 4

=item B<--eject>

open the CD/DVD/whatever tray after scanning a unit.

=cut

my $opt_eject;

=pod

=item B<--mp3>

also scan mp3 attributes (bitrate, channels, duration, ID3Tags, ...)

=cut

my $opt_mp3 = 1;

=pod

=item B<--sum>

also generate checksums for duplicate detection.

=cut

my $opt_sum = 1;

=pod

=item B<--files>

scan for files on units.

=cut

my $opt_file = 1;

=pod

=item B<--add>

Once a unit was scanned, only MP3 info and MD5sums are updated. Newly
found files are not added. With this switch you can add files that missed
on the first run.

=back

You can negate all options by prefixing them with "no"

=cut

my $opt_add;

my $wanthelp;
my $needhelp;

if( ! GetOptions(
	"eject!"	=> \$opt_eject,
	"mp3!"		=> \$opt_mp3,
	"sum!"		=> \$opt_sum,
	"files!"	=> \$opt_file,
	"add|a"		=> \$opt_add,
	"help!"		=> \$wanthelp,
)){
	$needhelp++;
}

my $cd = shift || '';
$cd =~ s:/+$::;
if( ! $cd ){
	print STDERR "missing device/cdpath\n";
	$needhelp++;
}

my( $dev, $dir ) = get_fstab( $cd );
$dir ||= $cd;
$dir .= "/";
$dir =~ s:/+:/:g;

if( ! $dev ){
	if( ! @ARGV && ($cd =~ /([^\/]+)$/) ){
		push @ARGV, $1;

	} elsif( $#ARGV > 0 ){
		print STDERR "cannot scan multiple units when $cd is no CD-ROM\n";
		$needhelp++;
	}
}

if( ! @ARGV ){
	print STDERR "missing collection name(s)\n";
	$needhelp++;
}

if( $wanthelp ){
	print <<EOF;
usage: $0 [opts] <cdpath> ["<collection><discid>"] ...
 scan one CD mounted at <topdir> for mp3s
 get IDtag and add infos to database
options:
  --eject   open tray when done with CD
  --files   do not scan files (default)
  --mp3     scan mp3 information (default)
  --sum     calculate md5 sum (default)
  --add     add missing files although CD is already in DB
 you can negate all options by prefixing them with 'no'

uses cdpath' basename when no discname is specified
EOF
	exit 0;
}

if( $needhelp ){
	print STDERR "use --help for usage info\n";
	exit 1;
}

# Dudl::File elements to update
my @want;
#my @want = qw{ FSUM DSUM };

if( $opt_mp3 ){
	push @want, Dudl::File::acquires( "info" );
	push @want, Dudl::File::acquires( "tag" );
	$opt_file ++;
}

if( $opt_sum ){
	push @want, Dudl::File::acquires( "sum" );
	$opt_file ++;
}

if( $opt_file ){
	push @want, Dudl::File::acquires( "base" );
	push @want, Dudl::File::acquires( "file" );
}

print "scanning:", 
	( $dev ? " ". ($#ARGV +1) ." units" : ""),
	( $opt_file ? " files" : ""),
	( $opt_mp3 ? " mp3" : ""),
	( $opt_sum ? " sum" : ""),
	"\n";
	



my @files;
my $dudl = new Dudl::DB;



&cd_umount( $dev, 0 );

foreach my $disc ( @ARGV ){
	print "scaning unit: ", $disc,"\n";
	&cd_mount( $dev, $disc );

	&scan( $dev, $dir, $disc, $opt_file );
	$dudl->commit || die;

	&cd_umount( $dev, $opt_eject );
}






sub scan {
	my $dev		= shift;
	my $dir		= shift;
	my $disc	= shift;
	my $dofiles	= shift;

	my $collection;
	my $discid;

	if( 2 != ( ( $collection, $discid ) = ($disc =~ m/(\D+)(\d+)/ ))){
		print STDERR "invalid collection or id: $disc\n";
		return;
	}


	my $unit;
	my $add_files = $opt_add ? 1 : 0;

	eval { $unit = Dudl::StorUnit->load_path( dudl => $dudl, 
		path => $disc ); };
	if( $@ ){
		print $@, "\n";
		$add_files ++;
		$unit = Dudl::StorUnit->new( dudl => $dudl );
		$unit->val( "collection", $collection );
		$unit->val( "colnum", $discid );
	}

	if( $dev ){
		$unit->acquire( $dev );
	}

	my $id = $unit->save;
	print "unit id: ". $id ."\n";
	


	if( $dofiles ){
		my $dlen = length($dir);
		my $file = new Dudl::File( $dudl, $id, \@want );

		print "searching for mp3s in \"$dir\"\n";
		#@files = ();
		#&finddepth(\&want_file, $dir );
		@files = `find $dir -type f -iname "*.mp3"`;


		# TODO: scan for filenames not ending in .mp3

		print "analyzing mp3s\n";
		foreach (@files){
			chomp;

			my $relpath = substr($_, $dlen );
			print "$relpath ...";

			$file->get_path( $relpath );
			if( ! $file->acquire( $dir, $relpath ) ){
				die "cannot get file details";
			}

			if( $file->id ){
				print " updating";
				$id = $file->update;
			} else {
				die "not adding file to existing unit" 
					unless $add_files;

				print " adding";
				$id = $file->insert;
			}

			if( ! $id ){
				die;
			}
			print " $id\n";

			$file->clean;
		}
	}
}

sub cd_mount {
	my $dev		= shift;
	my $disc	= shift;

	if( $dev ){
		do {
			print "please insert disc \"$disc\" in $dev: ";
			my $foo = <STDIN>;
		} while( system( "/bin/mount", $dev ));
	}
}

sub cd_umount {
	my $dev		= shift;
	my $eject	= shift;

	if( $dev ){
		if( $eject ){
			system( "eject", $dev );
		} else {
			system( "/bin/umount", $dev );
		}
	}
}




sub want_file {
	print $_ . 	$File::Find::name ."\n";
	if( /\.mp3$/i ){
		push @files, $File::Find::name;
	}
	
	return 0;
	return 1;
}


=pod

=head1 EXAMPLES

dudl-storscan /cdrom sl1 sl2 sl3 # scan 3 units

dudl-storscan foo sl4 # scan single dir with alternate unit name

dudl-storscan /pub/fun/mp3/CD/sl/sl5 # scan single dir

dudl-storscan --nofile --nomp3 --nosum /cdrom sl4 # add unit information

=head1 SEE ALSO

I<Dudl::Overview>

=head1 AUTHOR

Rainer Clasen

=cut


